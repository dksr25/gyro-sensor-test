$sprite-test-svg-origin: (
	total-width: 52px,
	total-height: 52px,
	padding: 4px,
	imageSrc: '../img/sprite-test-svg.svg'
);

$sprite-test-svg-vars: (
	'test99': (
		offset-x: 0px,
		offset-y: 0px,
		width: 44px,
		height: 44px
	),
);

@mixin useSvg-sprite-test ($image, $size: false) {
	$image-origin: $sprite-test-svg-origin;
	$image-var: map-get($sprite-test-svg-vars, $image);
	$image-path: map-get($image-origin, 'imageSrc');
	$padding: map-get($sprite-test-svg-origin, 'padding');
	$aspectRatio: map-get($image-var, 'height') / map-get($image-var, 'width');
	$sizeRatio: $size / map-get($image-var, 'width');

	@if($size){
		@if(unitless($size)){
			@warn '"#{$size}" of "#{$image}" is unitless value. Please insert value with unit(px)';
    }
		@else {
			width: $size;
			height: round($size * $aspectRatio * 100)/100;
			background-image: url($image-path);
			background-size: round(map-get($image-origin, 'total-width') * $sizeRatio * 100)/100 round(map-get($image-origin, 'total-height') * $sizeRatio * 100)/100;
			background-position: round((map-get($image-var, 'offset-x') - $padding) * $sizeRatio * 100)/100 round((map-get($image-var, 'offset-y') - $padding) * $sizeRatio * 100)/100;	
		}
	}
	@else {
		width: map-get($image-var, 'width');
		height: map-get($image-var, 'height');
		background-image: url($image-path);
		background-size: map-get($image-origin, 'total-width') map-get($image-origin, 'total-height');
		background-position: (map-get($image-var, 'offset-x') - $padding) (map-get($image-var, 'offset-y') - $padding);
	}
	background-repeat: no-repeat;
}
